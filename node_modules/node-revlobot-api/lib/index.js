'use strict';
const request = require('request');

function revlo(apiKey) {
  const base = 'https://api.revlo.co';
  const version = 1;

  function makeRequest(method, endpoint, queryObj, json) {
    return new Promise((resolve, reject) => {
      request({
        method,
        url: `${base}/${version}/${endpoint}`,
        json: true,
        headers: { 'x-api-key': apiKey },
        qs: queryObj,
        body: json,
      }, (err, res, body) => {
        if (err) {
          return reject(err);
        }
        if (body && body.error) {
          return reject(body.error);
        }
        if (res.statusCode !== 200) {
          return reject(`Unable to get data from the Revlo API. HTML status code: ${res.statusCode}`);
        }
        if (typeof body !== 'object') {
          return reject(`Invalid response type from Revlo API. Was expecting a JSON object.`);
        }
        return resolve(body);
      });
    });
  }

  return {
    get: {
      rewards: (data) => makeRequest('get', 'rewards', data),
      redemptions: (data) => makeRequest('get', 'redemptions', data),
      redemption: (id) => makeRequest('get', `redemptions/${id}`, null),
      points: (username) => makeRequest('get', `fans/${username}/points`),
    },
    patch: {
      redemption: (id, body) => makeRequest('patch', `redemptions/${id}`, null, body),
    },
    post: {
      bonus: (username, body) => makeRequest('post', `fans/${username}/points/bonus`, null, body),
    },
  };
}

module.exports = revlo;
